package com.foo.app.concurrent;

/**
 * 资料参考：并发编程网  ifeve.com
 * Volatile的实现原理
 * Created with IntelliJ IDEA.
 * User: zongjh
 * Date: 13-6-7
 * Time: 下午4:20
 *   Volatile是轻量级的synchronized，它在多处理器开发中保证了共享变量的“可见性”
 *   可见性的意思是当一个线程修改一个共享变量时，另外一个线程能读到这个修改的值。它在某些情况下比synchronized的开销更小
 *
 *  术语定义
    术语	英文单词	描述
    共享变量		在多个线程之间能够被共享的变量被称为共享变量。共享变量包括所有的实例变量，静态变量和数组元素。他们都被存放在堆内存中，Volatile只作用于共享变量。
    内存屏障	Memory Barriers	是一组处理器指令，用于实现对内存操作的顺序限制。
    缓冲行	Cache line	缓存中可以分配的最小存储单位。处理器填写缓存线时会加载整个缓存线，需要使用多个主内存读周期。
    原子操作	Atomic operations	不可中断的一个或一系列操作。
    缓存行填充	cache line fill	当处理器识别到从内存中读取操作数是可缓存的，处理器读取整个缓存行到适当的缓存（L1，L2，L3的或所有）
    缓存命中	cache hit	如果进行高速缓存行填充操作的内存位置仍然是下次处理器访问的地址时，处理器从缓存中读取操作数，而不是从内存。
    写命中	write hit	当处理器将操作数写回到一个内存缓存的区域时，它首先会检查这个缓存的内存地址是否在缓存行中，如果存在一个有效的缓存行，则处理器将这个操作数写回到缓存，而不是写回到内存，这个操作被称为写命中。
    写缺失	write misses the cache	一个有效的缓存行被写入到不存在的内存区域。

 处理器为了提高处理速度，不直接和内存进行通讯，而是先将系统内存的数据读到内部缓存（L1,L2或其他）后再进行操作，
 但操作完之后不知道何时会写到内存，如果对声明了Volatile变量进行写操作，JVM就会向处理器发送一条Lock前缀的指令，
 将这个变量所在缓存行的数据写回到系统内存。


 */
public class VolatileDemo {
}
